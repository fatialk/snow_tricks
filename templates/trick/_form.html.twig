{{ form_start(form) }}
    {{ form_row(form.name) }}
    {{ form_row(form.category) }}
    {{ form_row(form.description) }}
    {{ form_label(form.images) }}
    <ul class="images"
    data-index="{{ form.images|length > 0 ? form.images|last.vars.name + 1 : 0 }}"
    data-prototype="{{ form_widget(form.images.vars.prototype)|e('html_attr') }}">
    {% for element in form.images %}
                    <li>
                    <div class="flex">
                        {{ form_widget(element.image) }}
                        {% if element.image.vars.data is not empty %}
                        <img width="100" src="{{ asset('uploads/trick/'~element.image.vars.data.filename)}}" />
                        {% else %}
                        <img width="100" src="{{ asset('img/logo.png')}}" />
                        {% endif %}
                    </div>
                    </li>
    {% endfor %}
    </ul>
    {{ form_label(form.videos) }}
    <ul class="videos"
    data-index="{{ form.videos|length > 0 ? form.videos|last.vars.name + 1 : 0 }}"
    data-prototype="{{ form_widget(form.videos.vars.prototype)|e('html_attr') }}">
    {% for element in form.videos %}
                    <li>
                   {{ form_widget(element.link) }}
                    </li>
    {% endfor %}
    </ul>
    <button class="btn">{{ button_label|default('Save') }}</button>
{{ form_end(form) }}
<script>
const addVideoLink = document.createElement('a')
addVideoLink.classList.add('add_video_list')
addVideoLink.href='#'
addVideoLink.innerText='Add a video'
addVideoLink.dataset.collectionHolderClass='videos'
document.createElement('li').append(addVideoLink)

const collectionVideos = document.querySelector('ul.videos')
collectionVideos.appendChild(addVideoLink)

const addImage = document.createElement('a')
addImage.classList.add('add_image_list')
addImage.href='#'
addImage.innerText='Add an illustration'
addImage.dataset.collectionHolderClass='images'
document.createElement('li').append(addImage)

const collectionImages = document.querySelector('ul.images')
collectionImages.appendChild(addImage)

const addFormToCollection = (e) => {
  e.preventDefault();
	const collectionHolder = document.querySelector('.' + e.currentTarget.dataset.collectionHolderClass);

      const item = document.createElement('li');

      item.innerHTML = collectionHolder
        .dataset
        .prototype
        .replace(
          /__name__/g,
          collectionHolder.dataset.index
        );

      collectionHolder.appendChild(item);

      collectionHolder.dataset.index++;
      addListenerToInputFiles();
}

addVideoLink.addEventListener("click", addFormToCollection)
addImage.addEventListener("click", addFormToCollection)


const previewPhoto = (e) => {
  const input = e.currentTarget;
  const file = input.files;
    if (file) {
        const fileReader = new FileReader();


        fileReader.onload = function (event) {
          const parent = input.parentNode;
          let preview = input.parentNode.querySelector('img');
          if(!preview)
          {
          const wrapper = document.createElement('div');
          wrapper.classList.add('flex')
          parent.replaceChild(wrapper, input);
          wrapper.appendChild(input);
          preview = document.createElement('img');
          preview.setAttribute('width', '100');
          wrapper.appendChild(preview);
          }

          if(preview)
          {
            preview.setAttribute('src', event.target.result);
          }


        }
        fileReader.readAsDataURL(file[0]);

    }
}

const addListenerToInputFiles = (e) => {
const fileInputs = document.querySelectorAll('input.imageAddInput');
fileInputs.forEach(fileInput => {
fileInput.addEventListener("change", previewPhoto);
});
}
addListenerToInputFiles();

</script>

